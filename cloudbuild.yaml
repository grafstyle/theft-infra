steps:
- id: 'clone repository'
  name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - 'https://github.com/pRodriguez1630/terraform-infra-test.git'

- id: 'branch name-2'
  name: gcr.io/cloud-builders/git
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      branch=main
      git checkout ${branch}
      echo "***********************"
      git branch --show-current
      echo "***********************"
      
- id: 'tf check-existing-resources'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      branch=main
      if [ -d "terraform-infra-test/${branch}/" ]; then
        cd terraform-infra-test/${branch}
        # Consultar el estado actual de los recursos
        terraform show -no-color > current_state.tfstate
        # Obtener la lista de recursos del archivo tfstate
        resources=$(terraform show -json | jq -r '.values.root_module.resources[].address')
        # Verificar si los recursos existen en el estado actual
        while IFS= read -r resource; do
          if grep -q "$resource" current_state.tfstate; then
            echo "El recurso $resource ya existe. No se requiere crearlo nuevamente."
          else
            echo "El recurso $resource no existe. Se procederá con la creación."
          fi
        done <<< "$resources"
      else
        echo "Directorio de Terraform no encontrado."
        exit 1
      fi

- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
   branch=main
      if [ -d "terraform-infra-test/${branch}/" ]; then
        cd terraform-infra-test/${branch}
        terraform init
      else
        for dir in terraform-infra-test/*/
        do
          cd terraform-infra-test
        
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi


- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      branch=main
      if [ -d "terraform-infra-test/${branch}/" ]; then
        cd terraform-infra-test/${branch}
        terraform plan
      else
        for dir in terraform-infra-test/*/
        do
          cd ${dir}
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init
          terraform plan 
          cd ../../
        done
      fi


- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      branch=main
      if [ -d "terraform-infra-test/${branch}/" ]; then
        cd terraform-infra-test/${branch}
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '${branch}' does not represent an official environment."
        echo "*******************************************************************************"
        terraform apply -auto-approve
      fi
